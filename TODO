Refactor
========
+ Dont pas the name on the font attr
+ Split every attribute into:
  value_foo, attr_foo, foo
+ Cleanup the feature ui. Just get the input object given
  that we need to replicate lot of API
+ Add the navigation feature, this way document implementations
  can use common definitions for going to a specific URI, going
  back, next, etc.
+ Add an animation context concept, this way we can know whenever
  a set() is the only animation and thus just implement it as a pulse
  otherwise handle the sandwich concept and do as it is right now.
+ Add the document fragment node type. This is helpful for out of
  tree nodes but with the same logic as a document (i.e events)
+ Move the value, the list, even the string implementation to the base
  lib
+ The clip path is by default not inherited unless the inherited
  is set, several presentation attributes work like that, we need
  to fix the initializers of the attr
+ Add a egueb_dom_document_wait_process() which will wait until an enqueued
  process events arrives, in such case, wake up the thread.
+ Modify the clone interface, in order to clone a node we need a doc, just
  create it as it has been parsed

CSS
====
+ Add a way to unset every property, useful whenever we change styles and we need to rollback to its initial state

SVG
====
+ There's some complication about attributes and properties and how to export them:
  attributes: object's attributes
  properties: attributes that can be specified with a style and also as object's attributes
  http://dev.w3.org/SVG/proposals/css-animation/animation-proposal.html
  http://blogs.adobe.com/webplatform/2012/03/30/svg-animations-css-animations-css-transitions/
+ On a future we might want to save a svg too, for that case it might be interesting to do
  some research on way to simplify the properties, like simplifying matrices to just
  modifying the inner properties
