using "edom";

namespace "esvg" {
	/* basic types */
	struct "esvg_length" {
		double "value";
		int "unit";
	};

	struct "esvg_viewbox" {
		double "min_x";
		double "min_y";
		double "width";
		double "height";
	};

	/* the color needs a byte definition or int8 in ender */
	struct "esvg_color" {
		int "r";
		int "g";
		int "b";
	};

	union "esvg_paint" {
		/* fix this */
		bool "none";
		bool "current_color";
		esvg_color "color";
		string "paint_server";
	};

	abstract "element" : "tag" {
		/* core */
		int "type";
		/* dom */
		string "id";
		string "class";
		/* presentation attributes */
		string "style";
		string "clip_path";
		double "opacity";
		/* once the color is done we can the union paint for filling and stroking */
		esvg_paint "fill";
		esvg_paint "stroke";
		double "fill_opacity";
		double "stroke_opacity";
		bool "visibility";
		/* other attributes */
		matrix "transform";
	};

	abstract "renderable" : "element" {
		object "renderer";
		double "container_width";
		double "container_height";
		double "x_dpi";
		double "y_dpi";
	};

	class "svg" : "renderable" {
		esvg_length "x";
		esvg_length "y";
		esvg_length "width";
		esvg_length "height";
		double "actual_width";
		double "actual_height";
		esvg_viewbox "viewbox";
	};

	class "g" : "renderable" {

	};

	class "rect" : "renderable" {
		esvg_length "x";
		esvg_length "y";
		esvg_length "width";
		esvg_length "height";
		esvg_length "rx";
		esvg_length "ry";
	};

	class "ellipse" : "element" {

	};

	class "circle" : "element" {

	};

	class "path" : "element" {

	};

	class "line" : "element" {

	};

	class "polyline" : "element" {

	};

	class "polygon" : "element" {

	};

	class "use" : "element" {

	};

	class "text" : "element" {

	};
};

